<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quickex.mapper.layer.KoDictTypeMapper">

    <resultMap type="com.quickex.domain.layer.KoDictType" id="SysDictTypeResult">
        <id property="dictId" column="dict_id"/>
        <result property="dictName" column="dict_name"/>
        <result property="dictType" column="dict_type"/>
        <result property="status" column="status"/>
        <result property="parentId" column="parent_id"/>
        <result property="ancestors" column="ancestors"/>
    </resultMap>

    <sql id="selectDictTypeVo">
        select dict_id, dict_name, dict_type, status, remark,parent_id,
               ancestors
        from ko_dict_type
    </sql>

    <select id="selectDictTypeList" parameterType="com.quickex.domain.layer.KoDictType" resultMap="SysDictTypeResult">
        <include refid="selectDictTypeVo"/>
        <where>
            <if test="dictName != null and dictName != ''">
                AND dict_name like concat('%', #{dictName}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="dictType != null and dictType != ''">
                AND dict_type like concat('%', #{dictType}, '%')
            </if>
        </where>
    </select>

    <select id="selectDictTypeAll" resultMap="SysDictTypeResult">
        <include refid="selectDictTypeVo"/>
    </select>

    <select id="selectDictTypeById" parameterType="String" resultMap="SysDictTypeResult">
        <include refid="selectDictTypeVo"/>
        where dict_id = #{dictId}
    </select>

    <select id="selectDictTypeByType" parameterType="String" resultMap="SysDictTypeResult">
        <include refid="selectDictTypeVo"/>
        where dict_type = #{dictType}
    </select>

    <select id="checkDictTypeUnique" parameterType="String" resultMap="SysDictTypeResult">
        <include refid="selectDictTypeVo"/>
        where dict_type = #{dictType} limit 1
    </select>

    <delete id="deleteDictTypeById" parameterType="String">
        delete
        from ko_dict_type
        where dict_id = #{dictId}
    </delete>

    <delete id="deleteDictTypeByIds" parameterType="String">
        delete from ko_dict_type where dict_id in
        <foreach collection="array" item="dictId" open="(" separator="," close=")">
            #{dictId}
        </foreach>
    </delete>

    <update id="updateDictType" parameterType="com.quickex.domain.layer.KoDictType">
        update ko_dict_type
        <set>
            <if test="dictName != null and dictName != ''">dict_name = #{dictName},</if>
            <if test="dictType != null and dictType != ''">dict_type = #{dictType},</if>
            <if test="status != null">status = #{status}</if>
        </set>
        where dict_id = #{dictId}
    </update>

    <insert id="insertDictType" parameterType="com.quickex.domain.layer.KoDictType">
        insert into ko_dict_type(
        <if test="dictName != null and dictName != ''">dict_name,</if>
        <if test="dictType != null and dictType != ''">dict_type,</if>
        <if test="status != null">status</if>
        )values(
        <if test="dictName != null and dictName != ''">#{dictName},</if>
        <if test="dictType != null and dictType != ''">#{dictType},</if>
        <if test="status != null">#{status}</if>
        )
    </insert>

</mapper> 