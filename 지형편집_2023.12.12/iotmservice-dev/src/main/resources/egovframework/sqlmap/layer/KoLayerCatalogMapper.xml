<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quickex.mapper.layer.KoLayerCatalogMapper">

    <!--all-->
    <resultMap id="TreeResultMap" type="com.quickex.domain.layer.KoLayerCatalog">
        <result column="id" property="id"/>
        <collection property="children" select="nextNoteTree" column="id" ></collection>
    </resultMap>
    <select id="nextNoteTree" resultMap="TreeResultMap">
        select *
        from ko_layer_catalog
        where parent_id = #{id}
        order by sort asc
    </select>
    <select id="allTree" resultMap="TreeResultMap">
        <if test="name != null and name != ''">
            select
            *
            from ko_layer_catalog
            where name like concat('%', #{name}, '%')
            order by sort asc
        </if>
        <if test="name == null or name == ''">
            select
            *
            from ko_layer_catalog
            where parent_id='-1'
            order by sort asc
        </if>
    </select>


    <resultMap id="allAndRoleCheckedResult" type="com.quickex.domain.layer.KoLayerCatalog">
        <result column="id" property="id"/>
        <collection property="children" select="nextNoteTree1" column="{id=id,roleId=role_id}" ></collection>
    </resultMap>

    <resultMap id="allAndUserCheckedResult" type="com.quickex.domain.layer.KoLayerCatalog">
        <result column="id" property="id"/>
        <collection property="children" select="nextNoteTree2" column="{id=id,account=account}" ></collection>
    </resultMap>

    <!--all and role checked-->
    <select id="nextNoteTree1" resultMap="allAndRoleCheckedResult">
        select *,
               CASE (select count(*) from ko_role_layer_catalog where role_id=#{roleId} and catalog_id = ko_layer_catalog.id)
                   WHEN 0 THEN false
                   ELSE true END is_checked,#{roleId} as role_id
        from ko_layer_catalog
        where parent_id = #{id}
        order by sort asc
    </select>
    <select id="allAndRoleChecked" resultMap="allAndRoleCheckedResult">
        select
            *,
            CASE (select count(*) from ko_role_layer_catalog where role_id=#{roleId} and catalog_id = ko_layer_catalog.id)
                WHEN 0 THEN false
                ELSE true END is_checked
                , #{roleId} as role_id
        from ko_layer_catalog
        where  parent_id='-1'
        order by sort asc
    </select>

    <!--all and user checked-->
    <select id="nextNoteTree2" resultMap="allAndUserCheckedResult">
        select *
                ,
               CASE (select count(*) from ko_user_layer_catalog where user_id=#{account} and catalog_id = ko_layer_catalog.id)
                   WHEN 0 THEN false
                   ELSE true END is_checked,#{account} as account
        from ko_layer_catalog
        where parent_id = #{id}
        order by sort asc
    </select>
    <select id="allAndUserChecked" resultMap="allAndUserCheckedResult">
        select
            *,
            CASE (select count(*) from ko_user_layer_catalog where user_id=#{userId} and catalog_id = ko_layer_catalog.id)
                WHEN 0 THEN false
                ELSE true END is_checked,#{userId}  as account
        from ko_layer_catalog
        where parent_id='-1'
        order by sort asc
    </select>



    <resultMap id="TreeResultMapUserWebDto" type="com.quickex.domain.layer.KoMenuCatalogUserWebDto">
        <result column="id" property="treeId"/>
        <result column="uid" property="key"/>
        <result column="name" property="title"/>
        <result column="url" property="url"/>
        <result column="is_default" property="isDefault"/>
        <result column="service_id" property="serviceId"/>
        <result column="data_type" property="dataType"/>
        <result column="dict_label" property="layerType"/>
        <result column="disable_checkbox" property="disableCheckbox"/>
        <result column="min_x" property="minX"/>
        <result column="min_y" property="minY"/>
        <result column="max_x" property="maxX"/>
        <result column="max_y" property="maxY"/>
        <result column="min_level" property="minLevel"/>
        <result column="max_level" property="maxLevel"/>
        <result column="impact_comparison" property="impactComparison"/>
        <result column="monomer_selection" property="monomerSelection"/>
        <result column="template_url" property="templateUrl"/>
        <result column="color_matching_switch" property="colorMatchingSwitch"/>
        <result column="positioning_function_switch" property="positioningFunctionSwitch"/>
        <result column="alias" property="alias"/>
        <result column="edit_shp_height_switch" property="editShpHeightSwitch"/>
        <result column="shp_height" property="shpHeight"/>
        <result column="is_collection" property="isCollection"/>
        <!--<collection property="children" select="nextNoteTree_userwebdto1" column="id" ></collection>-->
    </resultMap>
    <select id="getTypeList"  resultMap="TreeResultMapUserWebDto">
        WITH temp_table AS(
            select
                id,parent_id,name,'' url,'1' data_type,'0' is_default,'' service_id,sort,'' uid,'' layer_type
                 ,'' min_x,'' min_y,'' max_x,'' max_y,null min_level,null max_level
                 ,null impact_comparison,null monomer_selection,null province_id,null template_url,img_path,catalog_type
            from ko_layer_catalog
        )
        select
            temp_table.name,
            temp_table.id,
            temp_table.parent_id,
            CASE temp_table.data_type
                WHEN '1' THEN temp_table.id
                WHEN '2' THEN temp_table.service_id
                ELSE '' END uid,
            CASE temp_table.data_type
                WHEN '1' THEN true
                WHEN '2' THEN false
                ELSE null END disable_checkbox,
            temp_table.url,
            temp_table.data_type,
            temp_table.is_default,
            temp_table.service_id,
            temp_table.sort,
            null as dict_label,
            temp_table.min_x,
            temp_table.min_y,
            temp_table.max_x,
            temp_table.max_y,
            temp_table.min_level,
            temp_table.max_level,
            temp_table.impact_comparison,
            temp_table.monomer_selection,
            temp_table.template_url,
            temp_table.img_path,
            #{cataloType} as catalog_type
        from temp_table
        where catalog_type = #{cataloType} and parent_id =#{pid}
        <if test="ids != null and ids.size() != 0">
            and temp_table.id in
            <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by sort asc
    </select>
    <select id="getServiceList" resultMap="TreeResultMapUserWebDto">
        WITH temp_table AS(
        select
        '-' id ,tree_id as parent_id,service_name as name,service_uri as  url,'2' data_type,is_default,id service_id,sort sort,'' uid,layer_type
        ,min_x,min_y,max_x,max_y,min_level,max_level
        ,impact_comparison,monomer_selection,null province_id,template_url,color_matching_switch,positioning_function_switch,alias
        ,edit_shp_height_switch,shp_height
        from ko_layer_service where service_state = '1'
        )
        select
        temp_table.name,
        temp_table.id,
        temp_table.parent_id,
        CASE temp_table.data_type
        WHEN '1' THEN temp_table.id
        WHEN '2' THEN temp_table.service_id
        ELSE '' END uid,
        CASE temp_table.data_type
        WHEN '1' THEN true
        WHEN '2' THEN false
        ELSE null END disable_checkbox,
        temp_table.url,
        temp_table.data_type,
        temp_table.is_default,
        temp_table.service_id,
        temp_table.sort,
        ko_dict_data.dict_label,
        temp_table.min_x,
        temp_table.min_y,
        temp_table.max_x,
        temp_table.max_y,
        temp_table.min_level,
        temp_table.max_level,
        temp_table.impact_comparison,
        temp_table.monomer_selection,
        temp_table.template_url,
        temp_table.color_matching_switch,
        temp_table.positioning_function_switch,
        temp_table.alias,
        temp_table.edit_shp_height_switch,
        temp_table.shp_height,
               4 catalog_type

        <if test="createUser != null and createUser != ''">
            ,  CASE
            (select count(*) from ko_user_layer_collection where create_user= #{createUser} and layer_id=temp_table.service_id)
            WHEN 0 THEN false
            ELSE true END is_collection
        </if>

        from temp_table
        left join ko_dict_data on temp_table.layer_type = ko_dict_data.dict_code and ko_dict_data.dict_type ='layer_style'
        where parent_id = #{id}
        order by sort asc
    </select>

</mapper>
